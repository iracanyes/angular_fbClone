@use "~@angular/material/index" as mat;
@import "variables";

//@include mat.core();
// Color set
$primary-color: mat.define-palette(mat.$blue-palette, 500);
$accent-color: mat.define-palette(mat.$red-palette, A200, A100, A400);
$warn-color: mat.define-palette(mat.$red-palette, A200, A100, A400);
//$dark-color: mat.define-palette(mat.$dark-theme-background-palette);
// Typography
$typo: mat.define-typography-config(
  $font-family: Roboto,

);
$my-dark-theme: mat.define-dark-theme((
  color: (
    primary: $primary-color,
    accent: $accent-color,
    warn: $warn-color
  ),
  /*
  background: (
    //primary: mat.$dark-theme-background-palette,
    //secondary: $primary-color,
    //accent: $dark-lighter,
    //warn: $dark-lighter
  ),
   */
  typography: $typo,
));

$my-light-theme: mat.define-light-theme((
  color: (
    primary: $primary-color,
    accent: $accent-color
  ),
));

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-dark-theme);

// Apply the light theme only when the `.my-light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
.my-light-theme{
  @include mat.core-color($my-light-theme);
  @include mat.button-color($my-light-theme);
}

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($my-dark-theme);

@include mat.snack-bar-color($my-dark-theme);
@include mat.snack-bar-theme($my-dark-theme);
// Include the theme mixins for other components you use here.
